{"ast":null,"code":"import _objectSpread from \"/Users/user/Desktop/react-assignment-2/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/user/Desktop/react-assignment-2/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/user/Desktop/react-assignment-2/src/Components/Home/Content.js\";\nimport React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { database } from \"../../data\";\nconsole.log(database);\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper\n  },\n  inline: {\n    display: \"inline\"\n  }\n}));\nexport default function Content() {\n  const classes = useStyles();\n\n  const _useState = useState({\n    userName: \"\",\n    userComment: \"\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        user = _useState2[0],\n        setUser = _useState2[1];\n\n  function handlePost(event) {\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n    setUser(prevValue => {\n      return _objectSpread({}, prevValue, {\n        [name]: value\n      });\n    });\n  }\n\n  return React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    onChange: handlePost,\n    name: \"userName\",\n    placeholder: \"Username\",\n    value: user.userName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    onChange: handlePost,\n    name: \"userComment\",\n    placeholder: \"What do you think?\",\n    value: user.userComment,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Submit\")), React.createElement(List, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, database.map((data, index) => React.createElement(React.Fragment, {\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(ListItem, {\n    alignItems: \"flex-start\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(ListItemAvatar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    alt: \"Remy Sharp\",\n    src: \"https://picsum.photos/200/300?random=1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  })), React.createElement(ListItemText, {\n    primary: data.comment,\n    secondary: React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      component: \"span\",\n      variant: \"body2\",\n      className: classes.inline,\n      color: \"textPrimary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, data.name)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  })), React.createElement(Divider, {\n    variant: \"inset\",\n    component: \"li\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  })))));\n}","map":{"version":3,"sources":["/Users/user/Desktop/react-assignment-2/src/Components/Home/Content.js"],"names":["React","useState","makeStyles","List","ListItem","Divider","ListItemText","ListItemAvatar","Avatar","Typography","database","console","log","useStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","inline","display","Content","classes","userName","userComment","user","setUser","handlePost","event","target","name","value","prevValue","map","data","index","comment"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { database } from \"../../data\";\n\nconsole.log(database);\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper\n  },\n  inline: {\n    display: \"inline\"\n  }\n}));\n\nexport default function Content() {\n  \n  const classes = useStyles();\n  const [user, setUser] = useState({\n    userName: \"\",\n    userComment: \"\"\n  })\n\n  function handlePost(event) {\n    const {name, value} = event.target;\n    setUser(prevValue => {\n      return {\n        ...prevValue,\n        [name]: value\n      }\n    })\n\n  }\n\n  return (\n    <div className=\"container\">\n      <form>\n        <input\n        onChange={handlePost}\n         name=\"userName\" \n         placeholder=\"Username\"\n         value={user.userName}\n         />\n        <input\n        onChange={handlePost} \n        name=\"userComment\" \n        placeholder=\"What do you think?\"\n        value={user.userComment}\n        />\n        <button>Submit</button>\n      </form>\n      <List className={classes.root}>\n        {database.map((data, index) => (\n          <React.Fragment key={index}>\n            <ListItem alignItems=\"flex-start\">\n              <ListItemAvatar>\n                <Avatar\n                  alt=\"Remy Sharp\"\n                  src=\"https://picsum.photos/200/300?random=1\"\n                />\n              </ListItemAvatar>\n              <ListItemText\n                primary={data.comment}\n                secondary={\n                  <React.Fragment>\n                    <Typography\n                      component=\"span\"\n                      variant=\"body2\"\n                      className={classes.inline}\n                      color=\"textPrimary\"\n                    >\n                      {data.name}\n                    </Typography>\n                  </React.Fragment>\n                }\n              />\n            </ListItem>\n            <Divider variant=\"inset\" component=\"li\" />\n          </React.Fragment>\n        ))}\n      </List>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}